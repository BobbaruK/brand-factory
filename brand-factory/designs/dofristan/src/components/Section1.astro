---
import type { ComponentProps } from "../../../../globals/types/component-props";
import type { TranslationsType } from "../../../../globals/types/translations";
import { Button } from "./ui/button";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const title: TranslationsType = {
  en: "Oracle",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: ``,
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
  showcase: "",
};

const para: TranslationsType = {
  en: "The perfect link between advanced analytics and reports in the financial markets and your execution in trading",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: ``,
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
  showcase: "",
};

const bullets: {
  title: TranslationsType;
  para: TranslationsType;
}[] = [
  {
    title: {
      en: "Subscribe",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: ``,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
      showcase: "",
    },
    para: {
      en: "Get a 2 months free subscription to our premium Trading Signals Kit",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: ``,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
      showcase: "",
    },
  },
  {
    title: {
      en: "Open account",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: ``,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
      showcase: "",
    },
    para: {
      en: "Choose the package that suits you best. Get signals anywhere and anytime on your phone, tablet or PC",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: ``,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
      showcase: "",
    },
  },
  {
    title: {
      en: "Use your signal",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: ``,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
      showcase: "",
    },
    para: {
      en: "Instantly copy the positions based on alerts: assets, up or down, price & expiry time.",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: ``,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
      showcase: "",
    },
  },
];

const btnLabel: TranslationsType = {
  en: "Get your signals now",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: ``,
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
  showcase: "",
};
---

<section
  id="section1"
  class="section1 bg-custom-background py-4 lg:py-6 2xl:py-8"
>
  <div
    class="after:bg-foreground relative container mb-4 space-y-6 pb-4 after:absolute after:bottom-0 after:left-1/2 after:block after:h-[2px] after:w-[50px] after:-translate-1/2 after:content-[''] lg:mb-6 lg:pb-6 2xl:mb-10 2xl:pb-10"
  >
    <h2
      class="font-rubik text-primary text-heading-lead text-center font-medium tracking-widest"
      set:html={title[componentProps.lang]}
    />
    <p
      class="text-center lg:text-[20px]"
      set:html={para[componentProps.lang]}
    />
  </div>
  <div
    class="container flex flex-wrap justify-around gap-x-2 gap-y-12 pt-4 pb-4 lg:pt-6 lg:pb-6 2xl:pt-8 2xl:pb-10"
  >
    {
      bullets.map((bullet, index) => (
        <>
          <article class="flex w-fit flex-col items-center justify-start gap-4 text-center">
            <div class="text-secondary border-secondary relative grid size-28 place-items-center border-2 p-1 text-[60px] font-black">
              <Fragment set:html={index + 1} />
              {index < bullets.length - 1 && (
                <div class="bg-custom-background absolute -right-1 hidden h-1/2 w-2 xl:block" />
              )}
              {index > 0 && (
                <div class="bg-custom-background absolute -left-1 hidden h-1/2 w-2 xl:block" />
              )}
            </div>
            <h3
              set:html={bullet.title[componentProps.lang]}
              class="text-heading3 text-primary font-rubik font-medium uppercase"
            />
            <p
              set:html={bullet.para[componentProps.lang]}
              class="max-w-[35ch] font-bold"
            />
          </article>
          {index < bullets.length - 1 && (
            <div class="hidden xl:block text-secondary pt-6 relative">
              <svg xmlns="http://www.w3.org/2000/svg" width="46" height="46" viewBox="0 0 24 24"><!-- Icon from Myna UI Icons by Praveen Juge - https://github.com/praveenjuge/mynaui-icons/blob/main/LICENSE --><path fill="currentColor" d="M17.47 7.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0v-3.78H2a.75.75 0 0 1 0-1.5h15.47z"/></svg>
            </div>
          )}
        </>
      ))
    }
  </div>
  <div class="container grid place-items-center">
    <Button
      set:html={btnLabel[componentProps.lang]}
      variant={"secondary"}
      className="js-modal-trigger font-rubik hover:text-foreground hover:border-secondary h-auto min-h-[50px] grow cursor-pointer rounded-3xl border-2 border-transparent text-[16px]! font-medium uppercase hover:bg-transparent lg:px-12"
    />
  </div>
</section>
