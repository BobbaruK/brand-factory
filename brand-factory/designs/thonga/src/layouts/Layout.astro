---
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import type { ComponentProps } from "../../../../globals/types/component-props";
import "../styles/global.css";
// Supports weights 100-900
import type { CustomOptions } from "@/pages/index.astro";
import "@fontsource-variable/roboto";

interface Props {
  componentProps: ComponentProps<any, CustomOptions>;
}

const { componentProps } = Astro.props;

const lang = componentProps.lang as keyof typeof componentProps.brandObj.typage;
---

<!doctype html>
<html
  lang={lang}
  dir={lang === "ar" ? "rtl" : "ltr"}
  data-brandname={componentProps.brandObj.name}
  data-lptype={componentProps.lpType}
  data-registrationtype={componentProps.registrationType}
  data-recaptchasitekey={componentProps.brandObj.recaptchaKey}
  data-typage={componentProps.brandObj.typage[lang]}
  data-openwa={componentProps.brandObj.whatsapp && "true"}
  data-wanumber={componentProps.brandObj.whatsapp
    ? componentProps.brandObj.whatsappNumber[lang]
    : false}
  data-lpfeatures={componentProps.features?.join(", ")}
  data-colorscheme={componentProps.customOptions?.colorScheme}
>
  <head>
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={componentProps.brandObj.images.faviconLink}
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{componentProps.lpName} | {componentProps.brandObj.name}</title>
    <style>
      body {
        font-family: "Roboto Variable", sans-serif;
      }
    </style>
  </head>
  <body>
    <div id="site-wrapper">
      <Header componentProps={componentProps} />
      <main>
        <slot />
      </main>
      <Footer componentProps={componentProps} />
    </div>
    <script
      type="module"
      src="https://assets.smartsupporthub.com/js/bundle/astro_lp_v2.js"
      is:inline></script>
  </body>
</html>

<style>
  #site-wrapper {
    display: grid;
    grid-template-rows: auto 1fr auto;
    min-height: 100vh;
  }
</style>

<style is:global define:vars={{}}>
  html[data-colorscheme="green"] {
    --primary: oklch(0.78 0.14 123.91);
    --secondary: oklch(0.66 0.21 35.96);
    --secondary-foreground: oklch(1 0 0);
  }
</style>
