---
import { type CustomOptions } from "@/pages/index.astro";
import { Image } from "astro:assets";
import Form from "../../../../globals/components/form";
import MainLogo from "../../../../globals/components/logos/MainLogo.astro";
import { type ComponentProps } from "../../../../globals/types/component-props";
import type { TranslationsType } from "../../../../globals/types/translations";
import { textBy } from "../../../../globals/utils/text-by";
import bgImage from "../assets/topBG.jpg";
import { Features } from "../../../../globals/types/enums";
import { showcase } from "../../../../globals/features/showcase/text";

interface Props {
  componentProps: ComponentProps<any, CustomOptions>;
}
const { componentProps } = Astro.props;

// Title
const titleFSA: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Rozpocznij handel na rynku finansowym przy wsparciu narzędzi edukacyjnych`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const titleCYSEC: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Poszerz swoją wiedzę na temat handlu CFD.`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const title = textBy(
  {
    default: titleFSA,
    fsa: titleFSA,
    cysec: titleCYSEC,
  },
  "license",
  componentProps,
);

// Para
const paraFSA: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `${componentProps.brandObj.name} oferuje Ci możliwość nauki handlu oraz doskonalenia umiejętności tradingowych dzięki wszechstronnym materiałom edukacyjnym.`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const paraCYSEC: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Załóż konto i otrzymaj darmowe materiały szkoleniow`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const para = textBy(
  {
    default: paraFSA,
    fsa: paraFSA,
    cysec: paraCYSEC,
  },
  "license",
  componentProps,
);

// Form title
const formTitleFSA: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Zarejestruj się, aby dowiedzieć się więcej`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formTitleCYSEC: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Załóż konto i otrzymaj darmowe materiały szkoleniowe`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formTitle = textBy(
  {
    default: formTitleFSA,
    fsa: formTitleFSA,
    cysec: formTitleCYSEC,
  },
  "license",
  componentProps,
);

// FormButton
const formButtonFSA: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Otrzymaj kursy związane z tradingiem`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formButtonCYSEC: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Otrzymaj kursy związane z tradingiem`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formButton = textBy(
  {
    default: formButtonFSA,
    fsa: formButtonFSA,
    cysec: formButtonCYSEC,
  },
  "license",
  componentProps,
);
---

<header id="header" class="relative">
  <Image
    src={bgImage}
    alt="Background"
    class="absolute top-0 left-0 z-0 h-full w-full object-cover"
    widths={[320, 576, 640, 768, 1024, 1280, 1536, bgImage.width]}
    sizes={`100vw`}
  />
  <div class="relative z-10 container flex flex-col md:flex-row md:gap-4">
    <div
      class="flex flex-col gap-4 py-5 text-white sm:py-7 md:basis-1/2 md:justify-between md:py-9 lg:basis-2/3 lg:py-10 xl:py-12 2xl:py-14"
    >
      <MainLogo
        size={componentProps.brandObj.nameToLower}
        logo={componentProps.logo()}
        square={componentProps.customOptions?.logoSquare}
      />
      <h1
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({
              words: 10,
            })
          : title[componentProps.lang]}
        class="text-heading1 uppercase md:mt-auto"
      />
      <p
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({
              words: 15,
            })
          : para[componentProps.lang]}
        class="text-para-lead font-bold uppercase md:mb-auto"
      />
    </div>
    <div
      class="formWrapper bg-primary flex flex-col gap-8 px-4 py-5 sm:py-7 md:basis-1/2 md:py-9 lg:basis-1/3 lg:py-10 xl:py-12 2xl:py-14"
    >
      <h2
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({
              words: 5,
            })
          : formTitle[componentProps.lang]}
        class="text-para-lead text-center uppercase"
      />
      <Form
        componentProps={componentProps}
        button={componentProps.features?.includes(Features.showcase)
          ? showcase({
              words: 3,
            })
          : formButton[componentProps.lang]}
        id="form1"
      />
    </div>
  </div>
</header>

<style lang="scss" is:global>
  @reference "../styles/global.css";
  #header svg {
    @apply max-w-full;
  }
  .formWrapper {
    @media (max-width: 767px) {
      box-shadow: 0 0 0 100vmax hsl(var(--primary));
      clip-path: inset(0 -100vmax);
    }
  }

  form.registerForm {
    .form-control {
      label {
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply h-12 text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply bg-secondary text-secondary-foreground hover:text-primary flex h-auto max-w-full gap-4 text-wrap uppercase hover:opacity-90;
      }
    }
  }
</style>
