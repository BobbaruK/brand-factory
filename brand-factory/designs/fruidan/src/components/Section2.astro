---
import { Button } from "@/components/ui/button";
import Form from "../../../../globals/components/form";
import type { ComponentProps } from "../../../../globals/types/component-props";
import type { TranslationsType } from "../../../../globals/types/translations";
import { icon1 } from "@/constants/icon1";
import { icon2 } from "@/constants/icon2";
import { icon3 } from "@/constants/icon3";
import { Features } from "../../../../globals/types/enums";
import { showcase } from "../../../../globals/features/showcase/text";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const title: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: ``,
  ar: "",
  de: "",
  es: `¡Comience hoy mismo!`,
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formButton: TranslationsType = {
  en: "",
  it: "",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: `Aprenda Más`,
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const bullets: {
  icon: string;
  title: TranslationsType;
  para: TranslationsType;
}[] = [
  {
    icon: icon1,
    title: {
      en: "",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: `Cursos`,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
    para: {
      en: "",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: `Cursos Básicos y Avanzados que pueden acomodarse a su nivel de educación`,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
  },
  {
    icon: icon2,
    title: {
      en: "",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: `Libro electrónico`,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
    para: {
      en: ``,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: `Guía introductoria al mundo del trading online`,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
  },
  {
    icon: icon3,
    title: {
      en: "",
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: `Vídeo`,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
    para: {
      en: ``,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: `Con información sobre diversos términos y conceptos.`,
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
  },
];
---

<section class="my-6 border-stone-500 lg:mt-24 lg:border-t-8">
  <div class="container flex flex-col gap-4 lg:flex-row">
    <div class="order-1 lg:order-2 lg:w-[50%] lg:min-w-[50%]">
      <div
        class="bg-background rounded-md border p-6 pt-0 shadow-xl lg:relative lg:z-20 lg:-mt-20"
      >
        <h2
          class="text-heading2 mb-4 rounded-b-md bg-gradient-to-t from-stone-300 p-1 py-2 text-center md:py-4"
          set:html={componentProps.features?.includes(Features.showcase)
            ? showcase({ words: 3 })
            : title[componentProps.lang]}
        />
        <Form
          componentProps={componentProps}
          button={componentProps.features?.includes(Features.showcase)
            ? showcase({ words: 2 })
            : formButton[componentProps.lang]}
          id="form1"
        />
      </div>
    </div>
    <div
      class="order-2 flex grow items-center justify-center lg:order-1 lg:justify-start"
    >
      <ul class="flex flex-col gap-4 text-center lg:items-start lg:text-start">
        {
          bullets.map((li) => (
            <li class="flex flex-col items-center justify-center gap-4 lg:flex-row">
              <div class="bulletSquare relative grid h-28 w-28 place-items-center overflow-hidden rounded-full border border-[var(--secondary-dark)] bg-[var(--secondary-dark)]/50 p-4 shadow-md lg:w-28 lg:min-w-28">
                <div
                  class="text-background grid h-full w-full place-items-center rounded-full bg-[var(--secondary-dark)] text-3xl font-bold"
                  set:html={li.icon}
                />
              </div>
              <div class="leading-tight">
                <h3
                  class="text-heading3 font-bold text-[var(--secondary-dark)] uppercase"
                  set:html={
                    componentProps.features?.includes(Features.showcase)
                      ? showcase({ words: 1 })
                      : li.title[componentProps.lang]
                  }
                />
                <p
                  set:html={
                    componentProps.features?.includes(Features.showcase)
                      ? showcase({ words: 15 })
                      : li.para[componentProps.lang]
                  }
                />
              </div>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</section>

<style lang="scss" is:global>
  @reference "../styles/global.css";

  body form.registerForm {
    .registerFormInner {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: repeat(4, auto);
      @container (min-width: 750px) {
        grid-template-columns: 1fr 1fr 1fr;
      }
      > .form-control {
        grid-column-start: 1;
        grid-column-end: 3;
        @container (min-width: 750px) {
          grid-column-start: 1;
          grid-column-end: 3;
        }

        &.firstNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 1;
            grid-column-end: 3;
          }
          @container (min-width: 600px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.lastNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 1;
            grid-column-end: 3;
          }
          @container (min-width: 600px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.emailWrapper {
          @container (min-width: 750px) {
            grid-column-start: 3;
            grid-column-end: 4;
          }
        }
        &.countryWrapper {
          @container (min-width: 750px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.phoneNumberWrapper {
          @container (min-width: 750px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.agreementWrapper,
        &.riskEsma {
          @container (min-width: 750px) {
            grid-column-start: 1;
            grid-column-end: 4;
          }
        }
        &.submitButtonWrapper {
          @container (min-width: 750px) {
            grid-column-start: 3;
            grid-column-end: 4;
            grid-row-start: 2;
            grid-row-end: 3;
          }
        }
      }
    }

    .form-control {
      .field {
        @apply lg:flex lg:items-center lg:justify-start lg:gap-2;
      }
      label {
        &:not(.agreement) {
          @apply font-bold lg:block lg:w-[160px] lg:min-w-[160px];
        }
      }
      .input {
        @apply grow;
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply h-12 w-full max-w-full bg-stone-100 text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button[type="submit"] {
        @apply bg-secondary text-secondary-foreground hover:bg-primary hover:text-primary-foreground flex h-12 flex-row-reverse gap-4 border-e-2 border-b-2 border-[var(--secondary-dark)] uppercase;
      }
    }
  }
</style>

<style lang="scss">
  @reference "../styles/global.css";

  .bulletSquare {
    &::before {
      content: "";

      @apply absolute top-0 -left-[90px] -z-10 block h-full w-full rotate-45 bg-[var(--secondary-dark)]/50;
    }
  }
</style>
