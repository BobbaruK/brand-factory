---
import { Image } from "astro:assets";
import Form from "../../../../globals/components/form";
import type { ComponentProps } from "../../../../globals/types/component-props";
import type { TranslationsType } from "../../../../globals/types/translations";
import bg from "../assets/bg.jpg";
import { Features } from "../../../../globals/types/enums";
import { showcase } from "../../../../globals/features/showcase/text";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const title: TranslationsType = {
  en: `Successful stock trading starts with a <span class="block text-heading1-alt p-1 bg-primary" >Free educational kit </span>`,
  it: `Tutti i dettagli del mercato Forex con un <span class="block text-heading1-alt p-1 bg-primary">kit educativo gratuito! </span>`,
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: ``,
  fi: "",
  pl: `Poszerz swoją wiedzę na temat kontraktów CFD. <span class="block text-heading1-alt p-1 bg-primary">Zdobądź nasz bezpłatny zestaw edukacyjny </span>`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const para: TranslationsType = {
  en: `Whether you are a beginner or a pro trader, build your knowledge and make better investing decisions with our extraordinary educational tools.`,
  it: "Ricevi consigli sugli investimenti chiave dai nostri migliori specialisti e prendi le decisioni piu'efficaci grazie ai nostri strumenti all'avanguardia.",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formTitle: TranslationsType = {
  en: `Less words - Better results`,
  it: "Meno parole, più risultati",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: ``,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formButton: TranslationsType = {
  en: `Register now`,
  it: "Registrati subito",
  tr: "",
  ro: "",
  ar: "",
  de: "",
  es: "",
  sv: ``,
  pt: "",
  fi: "",
  pl: `Dowiedz się więcej`,
  hu: "",
  th: "",
  ms: "",
  vi: "",
};
---

<section class="relative overflow-clip text-white">
  <Image
    src={bg}
    alt="Apple Laptop Diploma"
    class="h-custom-height absolute z-0 w-full object-cover lg:h-full"
    widths={[320, 576, 640, 768, 1024, 1280, 1536, bg.width]}
    sizes={`
    (max-width: 320px) 576px,
    (max-width: 576px) 768px,
    (max-width: 768px) 1024px,
    (max-width: 1024px) 1536px,
    100vw
  `}
  />
  <div class="relative z-10 container flex flex-col lg:gap-20">
    <div
      class="h-custom-height flex flex-col gap-4 py-5 sm:py-7 lg:h-auto lg:py-8 xl:py-10"
    >
      <h1
        class="text-heading1 flex max-w-[55ch] flex-col items-start justify-start leading-tight font-bold italic"
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({
              words: 10,
              spanClasses: "block text-heading1-alt p-1 bg-primary",
            })
          : title[componentProps.lang]}
      />
      {
        para[componentProps.lang] && (
          <p
            class="text-para-lead max-w-[35ch] leading-tight italic sm:max-w-[50ch]"
            set:html={
              componentProps.features?.includes(Features.showcase)
                ? showcase({
                    words: 30,
                  })
                : para[componentProps.lang]
            }
          />
        )
      }
    </div>
    <div
      class="bgform flex flex-col gap-6 bg-[repeating-linear-gradient(-45deg,var(--color-black),var(--color-black)_1px,var(--color-gray-900)_2px,var(--color-gray-900)_4px)] py-5 sm:py-7 lg:bg-black/50 lg:bg-none lg:py-8 xl:py-10 [&>form]:relative [&>form]:z-10"
    >
      {
        formTitle[componentProps.lang] && (
          <h2
            class="text-form-title text-center font-bold uppercase"
            set:html={
              componentProps.features?.includes(Features.showcase)
                ? showcase({
                    words: 5,
                  })
                : formTitle[componentProps.lang]
            }
          />
        )
      }
      <Form
        componentProps={componentProps}
        button={componentProps.features?.includes(Features.showcase)
          ? showcase({
              words: 2,
            })
          : formButton[componentProps.lang]}
        id="form1"
        layout={2}
      />
    </div>
  </div>
</section>

<style lang="scss" is:global>
  @reference "../styles/global.css";
  .bgform {
    position: relative;
    &::before,
    &::after {
      content: "";
      background-image: repeating-linear-gradient(
        -45deg,
        var(--color-black),
        var(--color-black) 1px,
        var(--color-gray-900) 2px,
        var(--color-gray-900) 4px
      );
      position: absolute;
      top: 0;
      bottom: 0;
      z-index: 0;
      height: 100%;
      width: 10000px;

      @media (min-width: 1024px) {
        background-image: none;
        background-color: oklch(from var(--color-black) l c h / 0.5);
      }
    }
    &::before {
      left: -10000px;
    }
    &::after {
      right: -10000px;
    }
  }
  form.registerForm {
    input,
    select {
      @apply text-slate-800;
    }
    input[disabled] {
      // color: white;
    }

    .form-control {
      label {
        font-size: 1rem;
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply h-12 text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply flex h-12 gap-4 text-lg uppercase;
      }
    }
  }
</style>
