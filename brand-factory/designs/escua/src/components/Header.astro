---
import { type CustomOptions } from "@/pages/index.astro";
import { Image } from "astro:assets";
import Form from "../../../../globals/components/form";
import MainLogo from "../../../../globals/components/logos/MainLogo.astro";
import { type ComponentProps } from "../../../../globals/types/component-props";
import type { TranslationsType } from "../../../../globals/types/translations";
import heroBackground from "../assets/hero-background.jpg";
import heroForeground from "../assets/hero-foreground.jpg";
import { Features } from "../../../../globals/types/enums";
import { showcase } from "../../../../globals/features/showcase/text";

interface Props {
  componentProps: ComponentProps<any, CustomOptions>;
}
const { componentProps } = Astro.props;

const title: TranslationsType = {
  en: "Expand your knowledge on CFD trading.",
  it: `Impara a fare trading <strong>Gratis</strong> sui mercati finanziari con zero rischio`,
  tr: "",
  ro:
    componentProps.license === "fsa"
      ? `Învaţă să tranzacţionezi <strong>gratuit</strong> pe piaţa financiară cu risc 0.`
      : ``,
  ar: "",
  de: "",
  es: "",
  sv: "",
  pt: "",
  fi: "",
  pl: "Poszerz swoją wiedzę na temat handlu cfd.",
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const paraLead: TranslationsType = {
  en: `Register for an account with ${componentProps.brandObj.name} and get your free handbook`,
  it: "Ricevi la tua guida gratuita in PDF Per imparare adesso",
  tr: "",
  ro:
    componentProps.license === "fsa"
      ? `Primeşte pdf-ul gratuit şi începe să înveţi acum`
      : ``,
  ar: "",
  de: "",
  es: "",
  sv: "",
  pt: "",
  fi: "",
  pl: "Załóż konto i otrzymaj darmowe materiały szkoleniowe",
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formTitle: TranslationsType = {
  en: "Register NOW",
  it: "Registrati Ora",
  tr: "",
  ro: componentProps.license === "fsa" ? `Înregistrează-te acum` : ``,
  ar: "",
  de: "",
  es: "",
  sv: "",
  pt: "",
  fi: "",
  pl: "Załóż konto",
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formSubTitle: TranslationsType = {
  en: "to get your <strong>FREE HANDBOOK</strong>",
  it: "per ricevere la tua <strong>guida gratuita in PDF</strong>",
  tr: "",
  ro:
    componentProps.license === "fsa"
      ? `şi primeşti <strong>GRATUIT GHIDUL PDF</strong>`
      : ``,
  ar: "",
  de: "",
  es: "",
  sv: "",
  pt: "",
  fi: "",
  pl: "i otrzymaj darmowe materiały szkoleniowe",
  hu: "",
  th: "",
  ms: "",
  vi: "",
};

const formButton: TranslationsType = {
  en: "Register",
  it: "Scarica la guida",
  tr: "",
  ro: componentProps.license === "fsa" ? `Primeşte ghidul` : ``,
  ar: "",
  de: "",
  es: "",
  sv: "",
  pt: "",
  fi: "",
  pl: "Zarejestruj się",
  hu: "",
  th: "",
  ms: "",
  vi: "",
};
---

<header id="header" class="siteHeader relative">
  <Image
    src={heroBackground}
    alt="Background"
    class="absolute top-0 left-0 z-0 h-full w-full object-cover"
    widths={[320, 576, 640, 768, 1024, 1280, 1536, heroBackground.width]}
    sizes={"100vw"}
  />
  <div class="relative z-20 container px-0 text-center sm:flex sm:text-start">
    <div
      class="relative flex flex-col justify-center gap-4 px-4 py-4 sm:basis-1/2 [&>.logo]:mb-auto"
    >
      <MainLogo
        size={componentProps.brandObj.nameToLower}
        logo={componentProps.logo()}
        square={componentProps.customOptions?.logoSquare}
      />
      <h1
        class="text-heading1 text-balance uppercase sm:max-w-[23ch]"
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({ words: 10, spanClasses: "font-bold" })
          : title[componentProps.lang]}
      />
      <p
        class="lead text-para-lead text-primary mb-auto font-bold text-balance uppercase sm:max-w-[25ch]"
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({ words: 10 })
          : paraLead[componentProps.lang]}
      />
      <Image
        src={heroForeground}
        alt="Foreground"
        class="absolute right-0 bottom-0 -z-10 hidden h-full w-[560px] object-cover object-right xl:block"
        widths={[320, 576, 640, 768, 1024, 1280, 1536, heroForeground.width]}
        sizes={`
          (max-width: 1279px) 0px,
          560px
        `}
      />
    </div>
    <div class="relative z-0 sm:basis-1/2">
      <div class="bg-primary relative z-10 flex flex-col gap-4 p-4 [&>*]:m-0">
        <h2
          class="relative text-center text-3xl uppercase"
          set:html={componentProps.features?.includes(Features.showcase)
            ? showcase({ words: 2 })
            : formTitle[componentProps.lang]}
        />
        <p
          class="relative text-center text-2xl"
          set:html={componentProps.features?.includes(Features.showcase)
            ? showcase({ words: 5, spanClasses: "font-bold" })
            : formSubTitle[componentProps.lang]}
        />
        <Form
          componentProps={componentProps}
          button={formButton[componentProps.lang]}
          id="form1"
        />
      </div>
    </div>
  </div>
</header>

<style lang="scss">
  #header.siteHeader {
  }
</style>

<style lang="scss" is:global>
  @reference "../styles/global.css";

  .registerForm {
    @apply relative;
    button {
      @apply bg-secondary;
      &:hover {
        @apply bg-secondary-foreground text-secondary;
      }
    }
  }
</style>
