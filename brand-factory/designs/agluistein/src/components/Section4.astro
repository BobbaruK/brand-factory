---
import Form from "../../../../globals/components/form";
import { showcase } from "../../../../globals/features/showcase/text";
import type { ComponentProps } from "../../../../globals/types/component-props";
import { Features } from "../../../../globals/types/enums";
import type { TranslationsType } from "../../../../globals/types/translations";
import { textBy } from "../../../../globals/utils/text-by";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const title: TranslationsType = textBy(
  {
    default: {
      en: `Get started with your free training`,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: "",
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
    meaningfulName: {
      en: `Access your free training now`,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: "",
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
  },
  "textVersion",
  componentProps.customOptions,
);

const para: TranslationsType = textBy(
  {
    default: {
      en: `Fill in the form and gain access to our exclusive trading education. No cost. No pressure. Just knowledge.`,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: "",
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
    meaningfulName: {
      en: `Complete the short form to unlock your exclusive access to our trading courseâ€”completely free, with no obligations. Just practical, useful knowledge.`,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: "",
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
  },
  "textVersion",
  componentProps.customOptions,
);

const button: TranslationsType = textBy(
  {
    default: {
      en: `Register`,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: "",
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
    meaningfulName: {
      en: `Register today`,
      it: "",
      tr: "",
      ro: "",
      ar: "",
      de: "",
      es: "",
      sv: ``,
      pt: "",
      fi: "",
      pl: ``,
      hu: "",
      th: "",
      ms: "",
      vi: "",
    },
  },
  "textVersion",
  componentProps.customOptions,
);
---

<section id="section4" class="section4 grid min-h-dvh place-items-center">
  <div class="relative z-10 container py-4">
    <div
      class="mx-auto flex max-w-[760px] flex-col items-center justify-center gap-4 rounded-md p-4 md:gap-6 lg:gap-10 lg:p-6"
    >
      <h2
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({ words: 5 })
          : title[componentProps.lang]}
        class="text-heading1 text-accent text-center leading-normal font-bold uppercase"
        style={{
          color:
            componentProps.customOptions?.colorScheme === "pink"
              ? "var(--primary)"
              : "inherit",
        }}
      />
      <p
        set:html={componentProps.features?.includes(Features.showcase)
          ? showcase({ words: 15 })
          : para[componentProps.lang]}
        class="text-para-lead text-center leading-normal font-light text-balance"
      />

      <Form
        componentProps={componentProps}
        button={componentProps.features?.includes(Features.showcase)
          ? showcase({ words: 2 })
          : button[componentProps.lang]}
        id="section-form"
        layout={1}
      />
    </div>
  </div>
</section>

<style lang="scss" is:global>
  @reference "../styles/global.css";

  form.registerForm {
    input,
    select {
      @apply text-slate-800;
    }
    input[disabled] {
      // color: white;
    }

    .form-control {
      label {
        font-size: 1rem;
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        @apply bg-white;
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply h-12 text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply text-para-lead bg-secondary hover:bg-accent hover:text-accent-foreground text-secondary-foreground font-bold uppercase sm:px-16 sm:py-4 sm:text-2xl;
      }
    }
  }
</style>
