---
import { FORM_BUTTON } from "@/constants/form-button";
import { cn } from "@/lib/utils";
import { type CustomOptions } from "@/pages/index.astro";
import { Image } from "astro:assets";
import Form from "../../../../globals/components/form";
import MainLogo from "../../../../globals/components/logos/MainLogo.astro";
import { showcase } from "../../../../globals/features/showcase/text";
import { type ComponentProps } from "../../../../globals/types/component-props";
import { Features } from "../../../../globals/types/enums";
import type { TranslationsType } from "../../../../globals/types/translations";
import background from "../assets/background.png";
import man from "../assets/man.png";

interface Props {
  componentProps: ComponentProps<any, CustomOptions>;
}
const { componentProps } = Astro.props;

const title: TranslationsType = {
  en: `Smart trading starts here`,
  it: `Il trading intelligente inizia qui`,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: `Smart trading börjar här`,
  pt: ``,
  fi: ``,
  pl: `Inteligentny trading zaczyna się tutaj`,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const para: TranslationsType = {
  en: `Unlock daily insights, technical analysis, trading signals and educational tools with ${componentProps.brandObj.name}'s exclusive access to Trading Central. Once you activate your account, you'll benefit from a world-class suite of market intelligence—all at no additional cost.`,
  it: `Sblocca analisi giornaliere, segnali operativi, strumenti formativi e analisi tecniche grazie all’accesso esclusivo di ${componentProps.brandObj.name} a Trading Central. Una volta attivato il tuo account, avrai accesso a una suite di strumenti d’intelligenza di mercato di livello mondiale—senza costi aggiuntivi.`,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: `Lås upp dagliga insikter, teknisk analys, handelssignaler och utbildningsverktyg med FXOROs exklusiva tillgång till Trading Central. När du aktiverar ditt konto får du tillgång till en världsledande uppsättning marknadsanalyser—helt utan extra kostnad.`,
  pt: ``,
  fi: ``,
  pl: `Odkryj codzienne analizy, sygnały handlowe, narzędzia edukacyjne i analizy techniczne dzięki ekskluzywnemu dostępowi ${componentProps.brandObj.name} do Trading Central. Po aktywacji konta otrzymasz dostęp do światowej klasy zestawu narzędzi analitycznych—całkowicie za darmo.`,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const list: {
  title: TranslationsType;
  data: TranslationsType[];
} = {
  title: {
    en: `Why traders choose us:`,
    it: `Perché i trader ci scelgono:`,
    tr: ``,
    ro: ``,
    ar: ``,
    de: ``,
    es: ``,
    sv: `Varför handlare väljer oss:`,
    pt: ``,
    fi: ``,
    pl: `Dlaczego traderzy wybierają nas:`,
    hu: ``,
    th: ``,
    ms: ``,
    vi: ``,
  },
  data: [
    {
      en: `<span class="text-white font-bold">Reliable</span> technical indicators`,
      it: `Indicatori tecnici <span class="font-bold">affidabili</span>`,
      tr: ``,
      ro: ``,
      ar: ``,
      de: ``,
      es: ``,
      sv: `<span class="font-bold">Tillförlitliga</span> tekniska indikatorer`,
      pt: ``,
      fi: ``,
      pl: `<span class="font-bold">Niezawodne</span> wskaźniki techniczne`,
      hu: ``,
      th: ``,
      ms: ``,
      vi: ``,
    },
    {
      en: `<span class="text-white font-bold">Accurate trading</span> signals backed by data`,
      it: `Segnali di trading <span class="font-bold">precisi</span> basati sui dati`,
      tr: ``,
      ro: ``,
      ar: ``,
      de: ``,
      es: ``,
      sv: `<span class="font-bold">Exakta</span> handelssignaler baserade på data`,
      pt: ``,
      fi: ``,
      pl: `<span class="font-bold">Dokładne</span> sygnały handlowe oparte na danych`,
      hu: ``,
      th: ``,
      ms: ``,
      vi: ``,
    },
    {
      en: `<span class="text-white font-bold">Free</span> access to Trading Central with account activation`,
      it: `Accesso <span class="font-bold">gratuito</span> a Trading Central con l’attivazione dell’account`,
      tr: ``,
      ro: ``,
      ar: ``,
      de: ``,
      es: ``,
      sv: `<span class="font-bold">Fri</span> tillgång till Trading Central vid kontoregistrering`,
      pt: ``,
      fi: ``,
      pl: `<span class="font-bold">Bezpłatny</span> dostęp do Trading Central po aktywacji konta`,
      hu: ``,
      th: ``,
      ms: ``,
      vi: ``,
    },
  ],
};

const formTitle: TranslationsType = {
  en: `Subscribe to ${componentProps.brandObj.name} and trading central`,
  it: `Iscriviti a ${componentProps.brandObj.name} e Trading Central`,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: `Prenumerera på ${componentProps.brandObj.name} och Trading Central`,
  pt: ``,
  fi: ``,
  pl: `Zapisz się do ${componentProps.brandObj.name} i Trading Central`,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};
---

<header id="header" class="relative overflow-clip">
  <Image
    src={background}
    alt="Background"
    class={cn(
      "absolute inset-0 z-0 h-full w-full object-cover pointer-events-none",
      componentProps.lang === "ar" ? "scale-[-1] " : "",
    )}
    widths={[320, 576, 640, 768, 1024, 1280, 1536, background.width]}
    sizes={`100vw`}
    loading={"eager"}
  />

  <div class="relative z-10">
    <div class="py-custom-spacing container text-white">
      <MainLogo
        size={componentProps.brandObj.nameToLower}
        logo={componentProps.logo()}
        square={componentProps.customOptions?.logoSquare}
      />
    </div>

    <div class="container flex flex-wrap">
      <div
        class="gap-custom-spacing pb-custom-spacing lg:pb-custom-spacing order-1 flex flex-col justify-center text-white lg:w-8/12 xl:w-5/12"
      >
        <h1
          set:html={componentProps.features?.includes(Features.showcase)
            ? showcase({
                words: 5,
              })
            : title[componentProps.lang]}
          class="text-heading1 text-secondary font-black text-balance uppercase"
        />

        <p
          set:html={para[componentProps.lang]}
          class="text-para-lead font-semibold"
        />

        <div class="flex flex-col gap-6">
          <p
            set:html={componentProps.features?.includes(Features.showcase)
              ? showcase({
                  words: 5,
                })
              : list.title[componentProps.lang]}
            class="text-para-lead font-semibold"
          />

          <ul
            class="text-para-lead flex list-outside list-decimal flex-col gap-6 ps-8 xl:pe-28 marker:text-secondary marker:font-bold marker:text-heading2"
          >
            {
              list.data.map((item) => (
                <li
                  class="text-balance"
                  set:html={
                    componentProps.features?.includes(Features.showcase)
                      ? showcase({
                          words: 10,
                        })
                      : item[componentProps.lang]
                  }
                />
              ))
            }
          </ul>
        </div>
      </div>

      <div
        class="relative order-3 flex w-full items-end justify-center lg:order-2 lg:w-4/12 xl:w-3/12"
      >
        <Image
          src={man}
          alt="Man"
          class={cn(
            "pointer-events-none max-lg:max-w-[350px] block w-full h-auto xl:absolute xl:-start-28 xl:w-[440px] xl:max-w-none -z-10",
            // componentProps.lang === "ar"
            //   ? "lg:scale-x-[1] xl:scale-x-[-1] "
            //   : "lg:scale-x-[-1] xl:scale-x-[1] ",
            // { "xl:-bottom-28": componentProps.lang === "es" },
          )}
          widths={[320, 576, 640, 768, 1024, 1280, 1536, man.width]}
          sizes={`
            (max-width: 320px) 273px,
            (max-width: 1023px) 350px,
            (max-width: 1280px) 410px,
            440px
          `}
          loading={"eager"}
        />
      </div>

      <div class="lg:pb-custom-spacing order-2 w-full lg:order-3 xl:w-4/12">
        <div class="flex w-full flex-col bg-white p-4 text-black xl:px-8">
          <div
            class="text-heading3 bg-white pb-4 text-center font-black uppercase"
            set:html={componentProps.features?.includes(Features.showcase)
              ? showcase({
                  words: 3,
                })
              : formTitle[componentProps.lang]}
          />
          <Form
            componentProps={componentProps}
            button={componentProps.features?.includes(Features.showcase)
              ? showcase({
                  words: 2,
                })
              : FORM_BUTTON[componentProps.lang]}
            id="section-form"
            layout={2}
          />
        </div>
      </div>
    </div>
  </div>
</header>

<style lang="scss" is:global>
  @reference "../styles/global.css";

  form.registerForm {
    input,
    select {
      @apply text-slate-800;
    }
    input[disabled] {
      // color: white;
    }

    .form-control {
      label {
        font-size: 1rem;
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // @apply h-12 text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply text-lg !font-black uppercase;
      }
    }
  }
</style>
