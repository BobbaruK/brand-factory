---
import { type BrandsNames } from "../../types/brands/names";

interface Props {
  size: BrandsNames;
  logo: string;
  square?: boolean;
}

const { size, logo, square = false } = Astro.props;

interface LogoCSSVars {
  sm: {
    width: number;
    height: number;
  };
  lg: {
    width: number;
    height: number;
  };
  square?: {
    sm: number;
    lg: number;
  };
}

const cssVars = (): LogoCSSVars => {
  switch (size) {
    case "arabtradingpro":
      return {
        sm: {
          width: 150,
          height: 30,
        },
        lg: {
          width: 200,
          height: 40,
        },
        square: {
          sm: 70,
          lg: 100,
        },
      };

    case "daytradingstar":
      return {
        sm: {
          width: 150,
          height: 13,
        },
        lg: {
          width: 200,
          height: 17,
        },
      };

    case "facoltaditrading":
      return {
        sm: {
          width: 100,
          height: 13,
        },
        lg: {
          width: 200,
          height: 25,
        },
      };

    case "fxoro":
      return {
        sm: {
          width: 100,
          height: 35,
        },
        lg: {
          width: 200,
          height: 71,
        },
      };

    case "fxoro_global":
      return {
        sm: {
          width: 100,
          height: 35,
        },
        lg: {
          width: 200,
          height: 71,
        },
      };

    case "fxoro_partners":
      return {
        sm: {
          width: 141,
          height: 50,
        },
        lg: {
          width: 161,
          height: 56,
        },
        square: {
          sm: 70,
          lg: 100,
        },
      };

    case "investingtips101":
      return {
        sm: {
          width: 100,
          height: 34,
        },
        lg: {
          width: 200,
          height: 69,
        },
      };

    case "oracle-signals":
      return {
        sm: {
          width: 150,
          height: 28,
        },
        lg: {
          width: 180,
          height: 34,
        },
        square: {
          sm: 70,
          lg: 100,
        },
      };

    case "piutrading":
      return {
        sm: {
          width: 100,
          height: 20,
        },
        lg: {
          width: 200,
          height: 40,
        },
      };

    case "protraderzone":
      return {
        sm: {
          width: 100,
          height: 35,
        },
        lg: {
          width: 200,
          height: 70,
        },
      };

    case "trade-navigator":
      return {
        sm: {
          width: 130,
          height: 25,
        },
        lg: {
          width: 210,
          height: 39,
        },
      };

    case "tradersacademic":
      return {
        sm: {
          width: 100,
          height: 18,
        },
        lg: {
          width: 200,
          height: 36,
        },
      };

    case "tradersprofiler":
      return {
        sm: {
          width: 50,
          height: 37,
        },
        lg: {
          width: 70,
          height: 52,
        },
      };

    case "tradestrategyhub":
      return {
        sm: {
          width: 100,
          height: 38,
        },
        lg: {
          width: 200,
          height: 76,
        },
      };

    case "tradingatheneum":
      return {
        sm: {
          width: 150,
          height: 60,
        },
        lg: {
          width: 182,
          height: 73,
        },
        square: {
          sm: 70,
          lg: 100,
        },
      };

    case "tradingprofiler":
      return {
        sm: {
          width: 150,
          height: 51,
        },
        lg: {
          width: 200,
          height: 68,
        },
        square: {
          sm: 70,
          lg: 100,
        },
      };

    default:
      return {
        sm: {
          width: 100,
          height: 100,
        },
        lg: {
          width: 200,
          height: 200,
        },
      };
  }
};

const exposedCssVars = cssVars();
const logoWidthSM = square
  ? exposedCssVars.square?.sm + "px"
  : exposedCssVars.sm.width + "px";
const logoHeightSM = square ? logoWidthSM : exposedCssVars.sm.height + "px";
const logoWidthLG = square
  ? exposedCssVars.square?.lg + "px"
  : exposedCssVars.lg.width + "px";
const logoHeightLG = square ? logoWidthLG : exposedCssVars.lg.height + "px";
---

<div class="logoWrapper" set:html={logo} />

<style
  define:vars={{ logoWidthSM, logoHeightSM, logoWidthLG, logoHeightLG }}
  is:global
>
  .logoWrapper {
    width: var(--logoWidthSM);
    max-width: 100%;
    height: var(--logoHeightSM);
    max-height: 100%;
  }

  @media (min-width: 768px) {
    .logoWrapper {
      width: var(--logoWidthLG);
      height: var(--logoHeightLG);
    }
  }

  .logoWrapper > svg {
    max-width: 100%;
    width: 100%;
    max-height: 100%;
    height: 100%;
  }
</style>
