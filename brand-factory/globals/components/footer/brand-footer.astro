---
import type { features } from "process";
import { showcase } from "../../features/showcase/text";
import footerTranslations from "../../translations/footer";
import {
  glossaryLetter_E,
  glossaryLetter_P,
} from "../../translations/glossary";
import { type ComponentProps } from "../../types/component-props";
import { Features } from "../../types/enums";
import type { FooterMetaData } from "../../types/footer";
import BrandFooterType from "./brand-footer-type.astro";

interface Props {
  componentProps: ComponentProps;
  footerMetaData?: FooterMetaData;
  showPrivacy?: boolean
}
const { componentProps, footerMetaData, showPrivacy = false } = Astro.props;

const translations = footerTranslations(componentProps.brandObj.name);

const feature_rfm = componentProps.features?.includes(Features.readyForMail);
const feature_outbrain = componentProps.features?.includes(Features.outbrain);
const feature_atheneum = componentProps.features?.includes(Features.atheneum);
const feature_showcase = componentProps.features?.includes(Features.showcase);
const feature_type5 = componentProps.features?.includes(Features.type5)

---

<footer class="brandFooter">
  <div class="container">
    
    {feature_showcase === true ? (
      <p set:html={showcase({ words: 50 })} />
    ) : (
      <>
        {!feature_rfm && !feature_outbrain && !feature_atheneum && !feature_type5 ? (
            <BrandFooterType
              componentProps={componentProps}
              translations={translations}
            />
          ) : (
            <>
              {feature_rfm && (
                <Fragment set:html={translations.rfm[componentProps.lang]} />
              )}

              {(feature_outbrain || feature_type5) && (
                <Fragment set:html={translations.outbrain[componentProps.lang]} />
              )}

              {feature_atheneum && (
                <>
                  <Fragment set:html={translations.atheneum[componentProps.lang]} />{" "}
                  <div class="footer-meta-wrapper">
                    {(footerMetaData?.email || footerMetaData?.phone) && (
                      <div class="footer-meta">
                        {footerMetaData?.email && (
                          <div class="footer-meta-row">
                            <div class="iconW">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="16"
                                height="16"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  fill="none"
                                  stroke="currentColor"
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                  stroke-width="1.5"
                                  d="m2.357 7.714l6.98 4.654c.963.641 1.444.962 1.964 1.087c.46.11.939.11 1.398 0c.52-.125 1.001-.446 1.964-1.087l6.98-4.654M7.157 19.5h9.686c1.68 0 2.52 0 3.162-.327a3 3 0 0 0 1.31-1.311c.328-.642.328-1.482.328-3.162V9.3c0-1.68 0-2.52-.327-3.162a3 3 0 0 0-1.311-1.311c-.642-.327-1.482-.327-3.162-.327H7.157c-1.68 0-2.52 0-3.162.327a3 3 0 0 0-1.31 1.311c-.328.642-.328 1.482-.328 3.162v5.4c0 1.68 0 2.52.327 3.162a3 3 0 0 0 1.311 1.311c.642.327 1.482.327 3.162.327"
                                />
                              </svg>
                            </div>
                            <span>
                              {glossaryLetter_E.email[componentProps.lang]}:{" "}
                              <a href={`mailto:${footerMetaData.email}`}>
                                {footerMetaData.email}
                              </a>
                            </span>
                          </div>
                        )}
                        {footerMetaData?.phone && (
                          <div class="footer-meta-row">
                            <div class="iconW">
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="16"
                                height="16"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  fill="currentColor"
                                  d="M4.05 21q-.45 0-.75-.3t-.3-.75V15.9q0-.325.225-.587t.575-.363l3.45-.7q.35-.05.713.063t.587.337L10.9 17q.95-.55 1.8-1.213t1.625-1.437q.825-.8 1.513-1.662t1.187-1.788L14.6 8.45q-.2-.2-.275-.475T14.3 7.3l.65-3.5q.05-.325.325-.562T15.9 3h4.05q.45 0 .75.3t.3.75q0 3.125-1.362 6.175t-3.863 5.55t-5.55 3.863T4.05 21"
                                />
                              </svg>
                            </div>
                            <span>
                              {glossaryLetter_P.phone[componentProps.lang]}:{" "}
                              <a href={`tel:${footerMetaData.phone}`}>{footerMetaData.phone}</a>
                            </span>
                          </div>
                        )}
                      </div>
                    )}
                    <div class="footer-logo">
                      <Fragment set:html={footerMetaData?.logo || componentProps.logo()} />
                    </div>
                  </div>
                </>
              )}
            </>
          )
        }
      </>
    )}
    {showPrivacy && (
      <p><a href={componentProps.brandObj.privacyLink[componentProps.lang]} target="_blank">{glossaryLetter_P.privacyPolicy[componentProps.lang]}</a></p>
    )}
  </div>
</footer>

<style lang="scss" is:global>
  .footer-meta-wrapper {
    display: flex;
    justify-content: start;
    align-items: center;
    gap: 50px;
    flex-wrap: wrap;
    .footer-meta {
      display: flex;
      flex-direction: column;
      gap: 8px;
      flex-wrap: wrap;
      .footer-meta-row {
        display: flex;
        gap: 4px;
        .iconW {
          width: 25px;
          height: 25px;
          border: 1px solid currentColor;
          border-radius: 100%;
          display: flex;
          align-items: center;
          justify-content: center;
        }
      }
    }
    .footer-logo {
      svg {
        max-height: 60px;
        width: auto;
      }
    }
  }
</style>
