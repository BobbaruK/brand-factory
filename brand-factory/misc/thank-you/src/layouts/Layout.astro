---
import Footer from "@/components/Footer.astro";
import Header from "@/components/Header.astro";
import type { CustomOptions } from "@/pages/index.astro";
import "@fontsource/poppins/400.css";
import "@fontsource/poppins/900.css";
// Supports weights 100-900
import "@fontsource-variable/montserrat";
import type { ComponentProps } from "../../../../globals/types/component-props";
import "../styles/global.css";
import { cn } from "@/lib/utils";

interface Props {
  componentProps: ComponentProps<any, CustomOptions>;
}

const { componentProps } = Astro.props;

const lang = componentProps.lang as keyof typeof componentProps.brandObj.typage;

const cssVarsFN = () => {
  switch (componentProps.customOptions?.designVersion) {
    case "brand":
      return {
        primary: "oklch(0.29 0.08 268.25)",
        primaryForeground: "oklch(0.98 0 0)",
        secondary: "oklch(0.82 0.17 77.68)",
        secondaryForeground: "oklch(0.208 0.042 265.755)",
      };

    default:
      return {
        primary: "oklch(0.38 0.14 293.59)",
        primaryForeground: "oklch(0.984 0.003 247.858)",
        secondary: "oklch(0.37 0.04 223.65)",
        secondaryForeground: "oklch(0.98 0 0)",
      };
  }
};
const cssVars = cssVarsFN();

const fontFamFN = () => {
  switch (componentProps.customOptions?.designVersion) {
    case "brand":
      return "font-montserrat";

    default:
      return "font-poppins";
  }
};
const fontFamily = fontFamFN();
---

<!doctype html>
<html
  lang={lang}
  dir={lang === "ar" ? "rtl" : "ltr"}
  data-brandname={componentProps.brandObj.name}
  data-lptype={componentProps.lpType}
  data-registrationtype={componentProps.registrationType}
  data-recaptchasitekey={componentProps.brandObj.recaptchaKey}
  data-typage={componentProps.brandObj.typage[lang]}
  data-openwa={componentProps.brandObj.whatsapp && "true"}
  data-wanumber={componentProps.brandObj.whatsapp
    ? componentProps.brandObj.whatsappNumber[lang]
    : false}
>
  <head>
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={componentProps.brandObj.images.faviconLink}
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{componentProps.lpName} | {componentProps.brandObj.name}</title>
  </head>
  <body class={cn(fontFamily)}>
    <div id="site-wrapper">
      <Header componentProps={componentProps} />
      <main>
        <slot />
      </main>
      <Footer componentProps={componentProps} />
    </div>
    <script type="module" src="/assets/js/tagmanager.js" is:inline></script>

    {
      componentProps.customOptions?.designVersion === "brand" && (
        <script
          type="module"
          src="https://assets.smartsupporthub.com/js/bundle/alm.js"
          is:inline
        />
      )
    }
  </body>
</html>

<style
  define:vars={{
    primaryV: cssVars.primary,
    primaryForegroundV: cssVars.primaryForeground,
    secondaryV: cssVars.secondary,
    secondaryForegroundV: cssVars.secondaryForeground,
  }}
>
  #site-wrapper {
    display: grid;
    grid-template-rows: auto 1fr auto;
    min-height: 100vh;
  }

  :root {
    --primary: var(--primaryV);
    --primary-foreground: var(--primaryForegroundV);
    --secondary: var(--secondaryV);
    --secondary-foreground: var(--secondaryForegroundV);
  }
</style>
